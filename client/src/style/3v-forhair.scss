// Import include-media before the header size definition.
@import '../../node_modules/include-media/dist/include-media';

/* Colors */
$color-base: rgb(27, 63, 27);
$color-invert: rgba(246, 250, 255, 0.7);

/* Layout Shapes */
// Attention, that the root em is used.

/**
 * Define the header height depending on the device type.
 * It is necessary to define this as a function, to avoid multiple switch cases on all
  * further occurances.
  * This function is working with the breakpoints defined by the include-media package, that
  * are used to the general differing as well.
 */
@function header-height() {
  $headerHeight_desktop: 2rem;
  $headerHeight_mobile: 3rem;

  // Make sure the breakpoints by include-media package are available.
  @if map-has-key($breakpoints, 'desktop') {
    // Make vw units comparable with pixel.
    $vw-context: (1000 * 0.01) * 1px;
    $desktopWidth: (map-get($breakpoints, 'desktop') / $vw-context) * 1vw;

    // Differ if working on a desktop or mobile device.
    @if 100vw >= $desktopWidth {
      @return $headerHeight_desktop;
    } @else {
      @return $headerHeight_mobile;
    }
  }

  // Fall-back case.
  @return $headerHeight_mobile;
}

$footer-height: header-height();
$mainMenu-height: header-height();
$icon-radius: calc(#{header-height()} * 2);

/* Index */
$layout-element-layer: 10;
$overlay-index: calc(#{$layout-element-layer} + 1);
$menu-index: calc(#{$overlay-index} + 1);

/* Transistions */
$transition: all 0.5s;

/* Other */
$border-radius: 10px;

/* Bulma */
// Import the variables first.
@import '../../node_modules/bulma/sass/utilities/initial-variables';

// Overwrite Bulma variables.
// Sizes
$size-6: 1.1rem;

// Colors:
$primary: $color-base;
$primary-invert: $color-invert;
$light: rgb(246, 250, 255);
$link: lighten($primary, 10%);

// Table
$table-background-color: rgba(black, 0.8);
$table-head-cell-color: $white !important;
$table-color: $white;
$table-row-hover-background-color: green !important;

// Modal
$modal-z: calc(#{$menu-index} + 1);
$modal-content-width: 400px;
$modal-card-spacing: 40px;
$modal-card-head-radius: $border-radius;
$modal-card-foot-radius: $border-radius;

// Import Bulma classes afterwards.
@import '../../node_modules/bulma/bulma';

hr {
  display: block;
  color: white;
}

p {
  white-space: pre-line;
}

/* Classes */
.ghost-button {
  // Use important, cause it is also used for overwriting.
  border: 0 !important;
  padding: 0 !important;
  background-color: transparent !important;
}

@mixin scroll {
  $width: 8px;
  $radius: calc(#{$width} / 2);

  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    border-radius: $radius;
    background-color: rgba(0, 0, 0, 0.3);
  }

  &::-webkit-scrollbar-thumb {
    border-radius: $radius;
    background: lighten($color-base, 10%);
  }
}

@function decentShadow($color) {
  @return 0 0 1px $color, 0 0 1px $color, 0 0 1px $color, 0 0 1px $color;
}

@function intenseShadow($color) {
  @return 0 0 5px $color, 0 0 5px $color, 0 0 5px $color, 0 0 5px $color,
    0 0 5px $color;
}

.modal {
  .modal-card-head,
  .modal-card-foot {
    text-align: center;
  }

  .modal-card-foot {
    button {
      width: 150px; // To avoid resizing when loading.
      margin: auto; // Centralize the button or equal divide the space.
    }
  }

  .modal-card-body {
    display: flex;
    flex-flow: column;
    align-items: center;

    p {
      text-align: center;
      margin-bottom: 20px; // Between this text and the input element.

      &.error-message {
        color: red !important;
      }
    }
  }
}

.editable {
  .editable-element {
    cursor: pointer !important;
  }
}
